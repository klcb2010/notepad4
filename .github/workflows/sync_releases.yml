name: Sync Last 2 zh-Hans Assets (Smart Skip Existing)

on:
  schedule:
    - cron: "0 3 * * *"   # 每天凌晨3点 UTC
  workflow_dispatch:       # 手动触发

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl gh

      - name: Authenticate GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Fetch latest release from upstream
        id: fetch
        run: |
          curl -s https://api.github.com/repos/zufuliu/notepad4/releases/latest > upstream.json
          TAG=$(jq -r .tag_name upstream.json)
          NAME=$(jq -r .name upstream.json)
          BODY=$(jq -r .body upstream.json)
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV
          echo "$BODY" > release_body.md

      - name: Check if release already exists
        id: check_release
        run: |
          if gh release view ${{ env.TAG }} --repo klcb2010/notepad4 > /dev/null 2>&1; then
            echo "EXISTS=true" >> $GITHUB_ENV
          else
            echo "EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Create release if not exists
        if: env.EXISTS == 'false'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.NAME }}
          body_path: release_body.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload last 2 zh-Hans assets
        run: |
          ASSETS=$(jq -r '.assets[].browser_download_url' upstream.json | grep "zh-Hans")
          LAST2=$(echo "$ASSETS" | tail -n 2)

          for URL in $LAST2; do
            FILE=$(basename "$URL")
            echo "⬇️ Downloading $FILE ..."
            curl -sSL "$URL" -o "$FILE"
            
            # 上传文件，如果已存在就跳过
            if gh release upload ${{ env.TAG }} "$FILE" --repo klcb2010/notepad4 --clobber=false 2>/dev/null; then
              echo "✅ $FILE uploaded successfully"
            else
              echo "⚠️ $FILE already exists, skipping"
            fi
          done
