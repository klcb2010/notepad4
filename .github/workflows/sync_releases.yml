name: Sync Latest Release

on:
  schedule:
    - cron: "0 3 * * *"  # 每天凌晨3点执行（UTC时间）
  workflow_dispatch:      # 支持手动触发

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get latest release from upstream
        id: upstream
        run: |
          # 获取上游最新 release 的 JSON
          curl -s https://api.github.com/repos/zufuliu/notepad4/releases/latest > upstream.json
          TAG=$(jq -r .tag_name upstream.json)
          NAME=$(jq -r .name upstream.json)
          BODY=$(jq -r .body upstream.json)
          ASSET_URL=$(jq -r '.assets[0].browser_download_url' upstream.json)
          
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "NAME=$NAME" >> $GITHUB_ENV
          echo "BODY=$BODY" >> $GITHUB_ENV
          echo "ASSET_URL=$ASSET_URL" >> $GITHUB_ENV

      - name: Check if release exists
        id: check
        run: |
          EXIST=$(curl -s -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/klcb2010/notepad4/releases/tags/${{ env.TAG }} | jq -r .tag_name // empty)
          echo "EXIST=$EXIST" >> $GITHUB_ENV

      - name: Create release if not exists
        id: create_release
        if: env.EXIST == ''
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.NAME }}
          body: ${{ env.BODY }}
          draft: false
          prerelease: false

      - name: Download asset
        if: env.ASSET_URL != 'null'
        run: |
          echo "Downloading asset from $ASSET_URL"
          curl -L $ASSET_URL -o asset_file

      - name: Upload asset
        if: env.ASSET_URL != 'null' && env.EXIST == ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: asset_file
          asset_name: $(basename ${{ env.ASSET_URL }})
          asset_content_type: application/octet-stream
